name: tag and release new version

on:
  pull_request_target:
    types:
      - closed

jobs:
  tag:
    name: create git tag
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == github.event.repository.default_branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: v${{ steps.bump.outputs.version }}
      body: ${{ steps.body.outputs.body }}
    steps:
      - id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_APP_SECRET }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.event.repository.default_branch }}
          # `fetch-depth` > 0 is required to have `ref` have an effect
          fetch-depth: 999
          fetch-tags: true
      - id: bump
        uses: commitizen-tools/commitizen-action@master
        with:
          changelog_increment_filename: .body.md
          git_redirect_stderr: true
          commit: true
          push: false
          no_raise: 21
      # pushing seperately to use correct auth set up during actions/checkout
      - run: git push
      - id: body
        run: |
          {
            echo 'body<<EOF'
            cat .body.md
            echo EOF
          } >> "$GITHUB_OUTPUT"
          cat .body.md >> $GITHUB_STEP_SUMMARY

  relase:
    name: create new release
    needs: tag
    if: ${{ needs.tag.outputs.tag }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/github-script@v7
        env:
          BODY: ${{ needs.tag.outputs.body }}
          TAG: ${{ needs.tag.outputs.tag }}
        with:
          script: |
            const { BODY, TAG } = process.env
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: TAG,
              body: BODY,
            })
